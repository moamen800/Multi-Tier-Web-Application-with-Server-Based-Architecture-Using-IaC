Backend:
#!/bin/bash

# Step 1: Clone the repository
# Clone the Simple-MERN-App repository from GitHub
echo "Cloning the Simple-MERN-App repository..."
git clone https://github.com/Kuzma02/Simple-MERN-App

# Navigate into the cloned project directory
cd Simple-MERN-App

# Step 2: Update package lists and install npm (if not already installed)
# Update the package list to ensure we install the latest versions
echo "Updating package list and installing npm..."
sudo apt update
sudo apt install -y npm

# Step 3: Create and configure .env file
# Create the .env file to store environment variables for the app
echo "Configuring the .env file..."

touch .env

# Add MongoDB connection string to the .env file
echo "MONGO_URI=mongodb+srv://Moamen:123@cluster0.qf7fpar.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0" >> .env

# Specify the port the app will run on
echo "PORT=3000" >> .env

# Step 4: Install app dependencies
# Install dotenv package to manage environment variables
echo "Installing app dependencies..."
npm install dotenv

# Run npm audit fix to automatically fix vulnerabilities in dependencies
npm audit fix

clear
# Step 5: Start the app
# Run the app using Node.js
echo "Starting the app..."
node app.js



frontend:
#!/bin/bash

# Step 1: Clone the MERN application repository
# Clone the Simple-MERN-App repository from GitHub
echo "Cloning the Simple-MERN-App repository..."
git clone https://github.com/Kuzma02/Simple-MERN-App
cd Simple-MERN-App

# Step 2: Replace 'localhost' with the public IP in all relevant files
# This replaces instances of 'localhost' with the server's public IP for external access
echo "Replacing 'localhost' with the public IP..."
find . -type f -exec sed -i 's/localhost/3.93.178.119/g' {} +

# Step 3: Install client dependencies
# Navigate to the client directory and install frontend dependencies
echo "Installing client-side dependencies..."
cd client

# Update package lists and install npm (Node.js package manager) if necessary
echo "Updating package lists and installing npm..."
sudo apt update
sudo apt install -y npm

# Install Node.js dependencies as listed in package.json
echo "Installing Node.js dependencies..."
npm install
npm audit fix

# Step 4: Install and start the Apache server
# Go back to the root project directory before installing Apache
cd ..

# Install Apache HTTP server to serve the frontend
echo "Installing and starting Apache server..."
sudo apt install -y apache2
sudo systemctl enable apache2
sudo systemctl start apache2

# Clear the terminal screen for better visibility
clear

# Step 5: Build the frontend
# Navigate to the client directory to build the React app
echo "Building the frontend..."
cd client
npm run build

# Step 6: Deploy frontend files to Apache's web directory
# Copy the built frontend files to Apache's root web directory
echo "Deploying frontend to Apache server..."
sudo cp -r dist/* /var/www/html/


# Step 7: Output the URL for testing the deployment
# Display the public IP where the frontend can be accessed
echo "Frontend is accessible at http://54.242.140.74"
